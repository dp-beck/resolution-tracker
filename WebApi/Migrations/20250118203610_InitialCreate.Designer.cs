// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ResolutionDbContext))]
    [Migration("20250118203610_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Resolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CurrentLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Goal")
                        .HasColumnType("integer");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Resolutions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CurrentLevel = 0,
                            Description = "Lose 10 pounds",
                            Goal = 10,
                            IsComplete = false,
                            Title = "Lose weight"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CurrentLevel = 0,
                            Description = "Do 1,000 pushups",
                            Goal = 1000,
                            IsComplete = false,
                            Title = "Gain muscle"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CurrentLevel = 0,
                            Description = "Practice 1,500 minutes",
                            Goal = 1500,
                            IsComplete = false,
                            Title = "Learn to play Guitar"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CurrentLevel = 0,
                            Description = "Earn a Certificate in AWS",
                            IsComplete = false,
                            Title = "Earn new Certificates"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            CurrentLevel = 0,
                            Description = "Read 10 books",
                            Goal = 10,
                            IsComplete = false,
                            Title = "Read more"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ResolutionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResolutionCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Career"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hobbies"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Resolution", b =>
                {
                    b.HasOne("Domain.Entities.ResolutionCategory", "Category")
                        .WithMany("Resolutions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.ResolutionCategory", b =>
                {
                    b.Navigation("Resolutions");
                });
#pragma warning restore 612, 618
        }
    }
}
